{"is_source_file": true, "format": "JavaScript", "description": "This file defines a custom React hook called useLocalStorage that provides persistent state management using localStorage with safe JSON parsing and error handling. It also accounts for server-side rendering environments.", "external_files": ["../utils/storage"], "external_methods": ["safeParse", "safeStringify"], "published": ["useLocalStorage"], "classes": [], "methods": [{"name": "useLocalStorage(key, initialValue)", "description": "A React hook to synchronize a state variable with localStorage, supporting safe JSON serialization/deserialization, SSR guards, and functional initial values.", "scope": "", "scopeKind": ""}, {"name": "valueFrom(v)", "scope": "useLocalStorage", "scopeKind": "function", "description": "unavailable"}], "calls": ["React.useEffect", "React.useRef", "React.useState", "storage.safeParse", "storage.safeStringify"], "search-terms": ["useLocalStorage", "localStorage", "React hook", "safeParse", "safeStringify", "SSR", "useRef", "useState"], "state": 2, "file_id": 13, "knowledge_revision": 43, "git_revision": "", "revision_history": [{"30": ""}, {"43": ""}], "ctags": [{"_type": "tag", "name": "useLocalStorage", "path": "/home/kavia/workspace/code-generation/personal-notes-web-app-29151-29188/notes_app_frontend/src/hooks/useLocalStorage.js", "pattern": "/^export function useLocalStorage(key, initialValue) {$/", "language": "JavaScript", "kind": "function", "signature": "(key, initialValue)"}, {"_type": "tag", "name": "valueFrom", "path": "/home/kavia/workspace/code-generation/personal-notes-web-app-29151-29188/notes_app_frontend/src/hooks/useLocalStorage.js", "pattern": "/^  function valueFrom(v) {$/", "language": "JavaScript", "kind": "function", "signature": "(v)", "scope": "useLocalStorage", "scopeKind": "function"}], "hash": "e76d045703d1f9dc56eff99fd01c5b0d", "format-version": 4, "code-base-name": "notes_app_frontend", "filename": "notes_app_frontend/src/hooks/useLocalStorage.js"}